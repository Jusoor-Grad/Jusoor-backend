# Generated by Django 5.0.4 on 2024-04-16 16:34

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0014_delete_chatroom'),
        ('core', '0008_studentpatient_overall_sentiment_score'),
    ]

    operations = [
        migrations.CreateModel(
            name='MessageSentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('sad', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('joy', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('fear', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('anger', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('surprise', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_result', to='chat.chatmessage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SentimentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('sentiment_analysis', models.TextField()),
                ('conversation_highlights', models.TextField()),
                ('recommendations', models.TextField()),
                ('sentiment_score', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_reports', to='core.studentpatient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportSentimentMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('sentiment_score', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_reports', to='sentiment_ai.messagesentiment')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_messages', to='sentiment_ai.sentimentreport')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
